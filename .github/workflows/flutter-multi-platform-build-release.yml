name: Flutter Multi-Platform Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: version
        type: string

jobs:
  build_android:
    name: Build Android APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.x'
          channel: 'stable'
      
      - name: Flutter pub get
        run: flutter pub get
      
      - name: Build APK
        run: flutter build apk --release
      
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-release
          path: build/app/outputs/flutter-apk/app-release.apk

  build_windows:
    name: Build Windows
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.x'
          channel: 'stable'
      
      - name: Enable Windows desktop
        run: flutter config --enable-windows-desktop
      
      - name: Flutter pub get
        run: flutter pub get
      
      - name: Build Windows
        run: flutter build windows --release
      
      - name: Create Windows ZIP
        run: |
          cd build/windows/x64/runner/Release
          powershell Compress-Archive -Path * -DestinationPath ../../../../../windows-release.zip
      
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-release
          path: windows-release.zip

  build_macos:
    name: Build macOS
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.x'
          channel: 'stable'
      
      - name: Enable macOS desktop
        run: flutter config --enable-macos-desktop
      
      - name: Flutter pub get
        run: flutter pub get
      
      - name: Build macOS
        run: flutter build macos --release
      
      - name: Create macOS DMG
        run: |
          cd build/macos/Build/Products/Release
          mkdir -p dmg
          cp -r *.app dmg/
          hdiutil create -volname "${GITHUB_REPOSITORY##*/}" -srcfolder dmg -ov -format UDZO ../../../../../macos-release.dmg
      
      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-release
          path: macos-release.dmg

  build_linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake libgtk-3-dev liblzma-dev libsecret-1-dev ninja-build pkg-config
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.x'
          channel: 'stable'
      
      - name: Enable Linux desktop
        run: flutter config --enable-linux-desktop
      
      - name: Flutter pub get
        run: flutter pub get
      
      - name: Build Linux
        run: flutter build linux --release
      
      - name: Create Linux tarball
        run: |
          cd build/linux/x64/release/bundle
          tar -czf ../../../../../linux-release.tar.gz *
      
      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-release
          path: linux-release.tar.gz

  release:
    name: Create GitHub Release
    needs: [build_android, build_windows, build_macos, build_linux]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ inputs.version }}
          draft: false
          prerelease: false
          tag_name: ${{ inputs.version }}
          files: |
            android-release/app-release.apk
            windows-release/windows-release.zip
            macos-release/macos-release.dmg
            linux-release/linux-release.tar.gz
          body: |
            ## Release ${{ inputs.version }}
            
            ### Downloads
            - **Android**: [APK](https://github.com/${{ github.repository }}/releases/download/v${{ inputs.version }}/app-release.apk)
            - **Windows**: [ZIP](https://github.com/${{ github.repository }}/releases/download/v${{ inputs.version }}/windows-release.zip)
            - **macOS**: [DMG](https://github.com/${{ github.repository }}/releases/download/v${{ inputs.version }}/macos-release.dmg)
            - **Linux**: [TAR.GZ](https://github.com/${{ github.repository }}/releases/download/v${{ inputs.version }}/linux-release.tar.gz)
